<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAYAAACtWK6eAAAABGdBTUEAALGPC/xhBQAAA4BJREFUeF7t
        2sttk2EYhNGUQAksIyWLlEQJlECnlEAJMJH8SxEwwy2OsH2O9MqWN99mnp3vAHgjT09P705fgZceHh4+
        Pj4+fsnn0+kn4Nkpjq+nEwkcvotDJHAocRwnEm7XL+I4TiTcnt+M4ziRcDv+MI7jRML1+8s4jhMJ1+sf
        4zhOJFyfV4rjOJFwPV45juNEwuU7UxzHiYTLdeY4jhMJl+eN4jjui38BczHeOI6vee/D6Wn4v4kDCnFA
        IQ4oxAGFOKAQBxTigEIcUIgDCnFAIQ4oxAGFOKAQBxTigEIcUIgDCnFAIQ4oxAGFOKAQBxTigEIcUIgD
        CnFAIQ4oxAGFOKAQBxTigEIcUIgDCnFAIQ4oxAGFOKAQBxTigEIcUIgDCnFAIQ4oxAGFOKAQBxTigEIc
        UIgDCnFAIQ4oxAGFOKAQBxTigEIcUIgDCnFAIQ4oxAGFOKAQBxTigEIcUIgDCnFAIQ4oxAGFOKAQBxTi
        gEIcUIgDCnFAIQ4oxAGFOKAQBxTigEIcUIgDCnFAIQ4YMtpP34/4nPcc5OlpuAwZrkhgyXBFAkuGKxJY
        MlyRwJLhigSWDFcksGS4IoElwxUJLBmuSGDJcEUCS4YrElgyXJHAkuGKBJYMVySwZLgigSXDFQksGa5I
        YMlwRQJLhisSWDJckcCS4YoElgxXJLBkuCKBJcMVCSwZrkhgyXBFAkuGKxJYMlyRwJLhigSWDFcksGS4
        IoElwxUJLBmuSGDJcEUCS4YrElgyXJHAkuGKBJYMVySwZLgigSXDFQksGa5IYMlwRQJLhisSWDJckcCS
        4YoElgxXJLBkuCKBJcMVCSwZrkhgyXBFAkuGKxJYMlyRwJLhigSWDFcksGS4IoElwxUJLBmuSGDJcEUC
        S4YrElgyXJHAkuGKBJYMVySwZLgigSXDFQksGa5IYMlwRQJLhisSWDJckcCS4YoElgxXJLBkuCKBJcMV
        CSwZrkhgyXBFAkuGKxJYMlyRwJLhigSWDFcksGS4IoElwxUJLBmuSGDJcEUCS4YrElgy3DeLJIF8Pj0L
        lyPjPXskz3Hc39+/Pz0JlyUjPlsk4uAqZMyvHok4uCoZ9atFIg6uUsb9z5GIg6uWkf91JOLgJmTsfxyJ
        OLgpGf1vRyIOblLG/8tIxMFNSwQ1EnFAJIYfIhEHvPAyEnHATzxHIg4YxAE34+7uG2Sag/hu09HtAAAA
        AElFTkSuQmCC
</value>
  </data>
  <data name="pictureBox4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>