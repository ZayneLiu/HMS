<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>